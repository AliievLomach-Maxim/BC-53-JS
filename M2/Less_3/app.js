// ⁡⁢⁢⁢​‌‍‌Example 11 - Цикл for​⁡

// Напиши цикл for, який виводить у консоль браузера числа за зростанням від min до max, але тільки якщо число кратне 5.

// const max = 106
// const min = 3

// for (let i = min; i <= max; i+=1) {
// 	if (i % 5 === 0) console.log(i)
// }

//⁡⁢⁣⁢ ​‌‌‍⁡⁣⁢⁣‍Модуль 𝟮. Заняття 𝟯. Масиви⁡​⁡⁡​​⁡

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁣⁣​‌‍‌⁡⁢⁢⁢𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟭 - Базові операції з масивом⁡​⁡

// Створіть масив genres з елементами «Jazz» та «Blues».
// Додайте «Рок-н-рол» до кінця.
// Виведіть у консоль перший елемент масиву.
// Виведіть у консоль останній елемент масиву.
// Код повинен працювати для масиву довільної довжини.
// Видаліть перший елемент та виведіть його в консоль.
// Вставте «Country» та «Reggae» на початок масиву.

// const genres = ['Jazz', 'Blues']
// genres.push('Rock')
// console.log('genres :>> ', genres[0])
// console.log('genres :>> ', genres[genres.length - 1])

// console.log('genres :>> ', genres.shift())
// console.log('genres :>> ', genres)
// genres.unshift('Country', 'reggae')
// console.log('genres :>> ', genres)
// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁣⁣​‌‍‌⁡⁢⁢⁢𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟮 - Масиви та рядки⁡​⁡

// Напиши скрипт для обчислення площі прямокутника зі сторонами,
// значення яких зберігаються у змінній values у вигляді рядка.
// Значення гарантовано розділені пробілом.

// const values = '8 11'

// const arr = values.split(' ')

// const arrS = arr[0] * arr[1]

// // Boolean(0)
// // String(10)
// // Number('12')
// // Object(12) >>err
// // Symbol(12) >> err
// // BigInt('123')>>>err
// // Undefined>>err
// // Null >> err

// console.log('arr :>> ', arrS)

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁢⁢​‌‍‌𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟯 - Перебір масиву⁡​⁡

// Напиши скрипт для перебору масиву fruits циклом for.
// Для кожного елемента масиву виведи в консоль рядок у форматі
// номер_елемента: значення_елемента.
// Нумерація елементів повинна починатися з 1.

// const fruits = ['🍎', '🍇', '🍑', '🍌', '🍋']

// for (let i = 0; i < fruits.length; i++) {
// 	console.log(`${i + 1}: ${fruits[i]}`)
// }

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁢⁢​‌‍‌𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟰 - Масиви та цикли⁡​⁡

// Напиши скрипт, який виводить у консоль ім'я та телефонний номер користувача.
// У змінних names та phones зберігаються рядки імен та телефонних номерів, розділені комами.
// Порядковий номер імен та телефонів у рядках вказують на відповідність.
// Кількість імен та телефонів гарантовано однакова.

// const names = 'Jacob,William,Solomon,Artemis'
// const phones = '89001234567,89001112233,890055566377,890055566300'

// const arrNames = names.split(',')
// const arrPhones = phones.split(',')

// console.log('arrNames :>> ', arrNames[0])
// console.log('arrPhones :>> ', arrPhones[0])

// console.log('arrNames :>> ', arrNames[1])
// console.log('arrPhones :>> ', arrPhones[1])

// for (let i = 0; i < arrNames.length; i++) {
// 	console.log(i)
// 	console.log(`${arrNames[i]}: ${arrPhones[i]}`)
// }

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁣⁣​‌‍‌⁡⁢⁢⁢𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟱 - Масиви та рядки⁡​⁡

// Напиши скрипт, який виводить у консоль усі слова рядка крім першого і останнього.
// Результуючий рядок не повинен починатися або закінчуватися символ пробілу.
// Скрипт повинен працювати для будь-якого рядка.

// const string = 'Welcome to the future'

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁢⁢​‌‍‌𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟲 - Масиви та рядки⁡​⁡

// Напиши скрипт, який «розгортає» рядок (зворотній порядок букв) і виводить його в консоль.

// const string = 'Welcome to the future'

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// ⁡⁢⁢⁢​‌‍‌𝗘𝘅𝗮𝗺𝗽𝗹𝗲 𝟳 - Пошук елемента⁡​⁡

// Напиши скрипт пошуку найменшого числа у масиві. Код повинен працювати для будь-якого
// масиву чисел.
// Використовуй цикл для розв'язання задачі.

// const numbers = [2, 17, 94, 1, 23, 37]

// ⁡⁢⁢⁢_______________________________________________________________________________________________________________________________________⁡

// const x = 10

// const users = ['alex', 'maxim', 'bob', 'jon']

//push

// arr.push(12, 13, 15)
// arr.pop()
// arr.unshift(1, 2, 3, 4)
// arr.shift()

// console.log('arr :>> ', arr)

// console.log('arr.includes(2) :>> ', arr.includes('!'))
// console.log('arr.indexOf() :>> ', arr.indexOf('qwerty'))

// for (let i = 0; i < users.length; i++) {
// 	users[i] = users[i] + '!'
// }

// console.log('users :>> ', users)

// const name = 'Alex, maxim,asd'

// const arr = name.split(', ')
// console.log('arr :>> ', arr)

// const arr2 = []
// const str = arr2.join(' ')
// console.log('str :>> ', str)

// const number = arr2[1]
// console.log('number :>> ', number)

// const users = ['alex', 'maxim', 'bob', 'jon']
// // const newUsers = users.slice(1)

// // console.log('users :>> ', users)
// // console.log('newUsers :>> ', newUsers)

// const newUsers = users.splice(1, 2, 'Jac', 'Jsc2')
// console.log('users :>> ', users)
// console.log('newUsers :>> ', newUsers)

// const users = [
// 	['Alex', 30, ['Alex', 30, ['Alex', 30]]],
// 	['Bob', 25],
// 	['Jon', 48],
// ]

// for (let i = 0; i < users.length; i++) {
// 	console.log('users :>> ', users[i].join(':'))
// }
// console.log('users :>> ', users)
// const newUsers = users.flat()

// console.log('newUsers :>> ', newUsers)

// const users = ['Alex', 'Bob']
// const phones = ['123-123', '321-321']
// const phones2 = ['123-123', '321-321']

// const newUsers = users + phones
// console.log('newUsers :>> ', newUsers)

// const users = ['Alex', 'Bob']

// const users2 = users

// users2.push(123)

// console.log('users :>> ', users)
// console.log('users2 :>> ', users2)
